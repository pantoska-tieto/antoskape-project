name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    strategy:
      fail-fast: false
      matrix:
        sample: [blinky]
        target: [esp32s3_devkitc/esp32s3/procpu]
    runs-on: self-hosted
    defaults:
      run:
        working-directory: customer-application
    container:
      image: zephyrprojectrtos/ci:main-arm64
      options: |
        --device=/dev/ttyUSB0
        -v "/media/cache/pantoska-tieto/antoskape-project":"/media/cache/pantoska-tieto/antoskape-project"
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: customer-application

      - name: Check cache dir
        run: ls -la /media/cache/pantoska-tieto/antoskape-project

      - name: Restore Zephyr workspace cache
        id: cache-restore-zephyr
        uses: j3hempsey-actions/local-cache@v1
        with:
          path: |
            /__w/antoskape-project/antoskape-project/modules
            /__w/antoskape-project/antoskape-project/zephyr
            /__w/antoskape-project/antoskape-project/.west
          key: zephyr-${{ runner.os }}-${{ hashFiles('customer-application/west.yml') }}
          restore-keys: |
            zephyr-${{ runner.os }}-

      - name: Initialize (skip if cached)
        # If Zephyr workspace does not existtion
        shell: bash
        # If Zephyr workspace does not exist
        if: steps.cache-restore-zephyr.outputs.cache-hit != 'true'
        run: |
            echo "Listing initial zephyr filesystem..."
            pwd
            echo "Current folder: "
            ls -la
            echo "Parent folder: "
            ls -la ..
            echo "Creating Zephyr west workspace..."
            rm -rf ../.west ../zephyr ../modules
            west init -l .
            west update -o=--depth=1 -n

      - name: Installing GitHub actions dependencies
        run: |
            echo "Installing dependencies for GitHub actions..."
            sudo apt update -y
            DEBIAN_FRONTEND=noninteractive apt-get install -y tar zstd lz4
            tar --version
            lz4 -V
            zstd --version
            sudo mkdir -p /media/cache/pantoska-tieto/antoskape-project/
            sudo chown -R "$USER:$USER" /media/cache/pantoska-tieto/antoskape-project
            sudo chmod -R 777 /media/cache/pantoska-tieto/antoskape-project

      # Example for custom application build
      - name: Build ${{ matrix.sample }} for ${{ matrix.target }}
        shell: bash
        run: west build -p always -b ${{ matrix.target }} app-esp32/${{ matrix.sample }}
      
      - name: Flash
        shell: bash
        run: west flash

  tests:
    name: Run tests
    runs-on: self-hosted
    defaults:
      run:
        working-directory: customer-application
    needs: build
    if: ${{ !failure() && !cancelled() }}
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    container:
      image: zephyrprojectrtos/ci:main-arm64
      options: |
        --device=/dev/ttyUSB0
        -v "/media/cache/pantoska-tieto/antoskape-project":"/media/cache/pantoska-tieto/antoskape-project"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: customer-application

      - name: Check cache dir
        run: ls -la /media/cache/pantoska-tieto/antoskape-project

      - name: Restore Zephyr workspace cache
        id: cache-primes
        uses: j3hempsey-actions/local-cache@v1
        with:
          path: |
            /__w/antoskape-project/antoskape-project/zephyr
            /__w/antoskape-project/antoskape-project/modules
            /__w/antoskape-project/antoskape-project/.west
          key: zephyr-${{ runner.os }}-${{ hashFiles('customer-application/west.yml') }}
          restore-keys: |
            zephyr-${{ runner.os }}-

      - name: Installing GitHub actions dependencies
        run: |
            echo "Installing dependencies for GitHub actions..."
            sudo apt update -y
            DEBIAN_FRONTEND=noninteractive apt-get install -y tar zstd lz4
            tar --version
            lz4 -V
            zstd --version
            sudo mkdir -p /media/cache/pantoska-tieto/antoskape-project/
            sudo chown -R "$USER:$USER" /media/cache/pantoska-tieto/antoskape-project
            sudo chmod -R 777 /media/cache/pantoska-tieto/antoskape-project

      - name: Twister Tests
        shell: bash
        run: |
          echo "Testing board..."
          west twister -vv --platform native_sim/native/64 -T test/basic

      - name: Archive single test artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: single_test_artifacts
          # Relative path to project root. working-directory value is not applicable!
          path: |
            customer-application/twister-out*/*
          include-hidden-files: true
          if-no-files-found: error
          retention-days: 5

      - name: Copy single report summary file
        run: |
          mkdir -p test-summary
          cp twister-out/twister_suite_report.xml test-summary/samples-zephyr-1.xml 2>/dev/null


  tests_results:
    name: Store tests results
    runs-on: self-hosted
    defaults:
      run:
        working-directory: customer-application
    needs: [build, tests]
    if: ${{ always() }}
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    container:
      image: zephyrprojectrtos/ci:main-arm64
      options: |
        --device=/dev/ttyUSB0
        -v "/media/cache/pantoska-tieto/antoskape-project":"/media/cache/pantoska-tieto/antoskape-project"
    steps:
      - name: Check cache dir
        run: ls -la /media/cache/pantoska-tieto/antoskape-project
        
      - name: Restore Zephyr workspace cache
        id: cache-primes
        uses: j3hempsey-actions/local-cache@v1
        with:
          path: |
            /__w/antoskape-project/antoskape-project/modules
            /__w/antoskape-project/antoskape-project/zephyr
            /__w/antoskape-project/antoskape-project/.west
          key: zephyr-${{ runner.os }}-${{ hashFiles('customer-application/west.yml') }}
          restore-keys: |
            zephyr-${{ runner.os }}-

      - name: Installing GitHub actions dependencies
        run: |
            echo "Installing dependencies for GitHub actions..."
            sudo apt update -y
            DEBIAN_FRONTEND=noninteractive apt-get install -y tar zstd lz4
            tar --version
            lz4 -V
            zstd --version
            sudo mkdir -p /media/cache/pantoska-tieto/antoskape-project/
            sudo chown -R "$USER:$USER" /media/cache/pantoska-tieto/antoskape-project
            sudo chmod -R 777 /media/cache/pantoska-tieto/antoskape-project

      - name: Check filesystem
        if : ${{ always() }}
        run: |
          echo "Checking out customer-application directory..."
          ls -la
          echo "Checking out customer-application parent directory..."
          ls -la ..

      - name: Archive test summary artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: summary_artifacts
          # Relative path to project root. working-directory value is not applicable!
          path: |
            customer-application/test-summary
          if-no-files-found: error
          retention-days: 5

  publish_test_summaries:
    name: Publish Test Summaries
    needs: [build, tests, tests_results]
    if: ${{ always() }}
    uses: ./.github/workflows/reports-summary-publish.yml
