name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    container: zephyrprojectrtos/ci:main-arm64
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    strategy:
      matrix:
        sample: [accelerometer, active_sleep, at_client, battery, blinky, bme280, button, deep_sleep, external_flash, external_rtc, external_rtc_time_sync, led_pwm, mfw_update, nanopb, sms]
        target: [esp32s3_devkitc/esp32s3/procpu]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: customer-application1

      - name: Set variables
        working-directory: customer-application1
        id: vars
        run: |
             echo "branch=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
             echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Initialize
        working-directory: customer-application1
        run: |
          pip3 install -U west
          west init -l .
          west update
          pip3 install -r ../zephyr/scripts/requirements-base.txt

      - name: Build ${{ matrix.sample }} for ${{ matrix.target }}
        working-directory: customer-application1
        run: |
          west build -b ${{ matrix.target }} -s samples/${{ matrix.sample }} -p
          mkdir -p .out
          cp build/zephyr/app_update.bin .out/${{ matrix.sample }}_${{ matrix.target }}_app_update.bin
          cp build/zephyr/merged.hex .out/${{ matrix.sample }}_${{ matrix.target }}_merged.hex

      - name: Archive firmware
        uses: actions/upload-artifact@v3
        with:
          name: customer-application1_${{ steps.vars.outputs.branch }}_${{ steps.vars.outputs.sha_short }}
          path: customer-application1/.out/