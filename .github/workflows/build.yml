name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build and Test
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        sample: [blinky]
        target: [esp32s3_devkitc/esp32s3/procpu]
    runs-on: self-hosted
    defaults:
      run:
        working-directory: customer-application
    container:
      image: zephyrprojectrtos/ci:main-arm64
      options: --device=/dev/ttyUSB0
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: customer-application
      
      - name: Initialize
        shell: bash
        run: |
          echo "Checking out Zephyr env..."
          pwd
          echo "Current github workspace:"
          ls -la
          echo "Parent github folder"
          ls -la ..
          rm -rf ../.west
          west init -l .
          west update -o=--depth=1 -n

      - name: Get tests list
        shell: python
        id: py-script
        run: |
            import os
            test_list = [root for root, dirs, files in os.walk("test", topdown=True) for file in files if file == "prj.conf"]
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                f.write(f'tests={test_list}\n')

      # Example for custom application build
      - name: Build ${{ matrix.sample }} for ${{ matrix.target }}
        shell: bash
        run: west build -p always -b ${{ matrix.target }} app-esp32/${{ matrix.sample }}
        
      - name: Flash
        shell: bash
        run: west flash

      # Twister tests section
      - name: Make script executable
        run: chmod +x scripts/get_tests_list.sh
        shell: bash

      - name: Twister tests
        run: scripts/get_tests_list.sh "${{steps.py-script.outputs.tests}}"
        shell: bash

      - name: Single test artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: single_test_artifacts
          # Relative path to project root. 
          path: |
            customer-application/twister-out*/*
          include-hidden-files: true
          if-no-files-found: error
          retention-days: 5
      
      - name: Prepare CI report summary
        if : ${{ always() }}
        run: |
          rm -rf test-summary
          sudo mkdir -p test-summary
          cp twister-out/twister_suite_report.xml test-summary/samples-zephyr-1.xml

      - name: Archive test summary artifacts
        uses: actions/upload-artifact@v4
        continue-on-error: true
        if: ${{ always() }}
        with:
          name: summary_test_artifacts
          # Relative path to project root. 
          path: |
            customer-application/test-summary
          if-no-files-found: error
          retention-days: 5

  publish_test_summaries:
    name: Publish Test Summaries
    if: ${{ always() }}
    needs: build
    uses: ./.github/workflows/reports-summary-publish.yml
