name: Testing

on:
  workflow_call:
    inputs:
      docker_image:
        description: Docker image to use in tests
        required: true
        type: string
      runner_label:
        description: Label of the runner specified in Build workflow
        required: true
        type: string
      board_target:
        description: Target board for the build
        required: true
        type: string
      device_serial:
        description: Serial device for connecting target board
        required: true
        type: string
      test_tag:
        description: Test TAGs to filter tests
        required: false
        type: string
      pytest_args:
        description: Arguments to the pytest subprocess (extend YAML config)
        required: false
        type: string
      test_scenario:
        description: Test suite scenario to run
        required: false
        type: string
      tests_target:
        description: Tests scope to run
        required: true
        default: app/repo
        type: string
      integration_tests:
        description: Condition to run integration tests only
        required: false
        type: string

env:
  # Pass all secrets as json to jobs
  SECRETS_JSON: ${{ toJSON(secrets) }}

jobs:
  testing:
    name: Start testing
    runs-on: ${{ inputs.runner_label }}
    outputs:
      test_type: ${{ inputs.tests_target }}
      label: ${{ inputs.runner_label }}
    defaults:
      run:
        working-directory: customer-application
    container:
      image: ${{ inputs.docker_image }}
      options: >
        --device=/dev/ttyUSB0 
        --privileged  
        -v /var/run/dbus:/var/run/dbus 
        -v /run/dbus:/run/dbus 
        -v /dev:/dev 
        -e DBUS_SESSION_BUS_ADDRESS=unix:path=/run/dbus/system_bus_socket
    env:
      CMAKE_PREFIX_PATH: /opt/toolchains
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: customer-application

      # Debug
      - name: Debug - print variables
        shell: bash
        run: |
            echo "Integration tests: ${{ inputs.integration_tests }}"
      

